 include  stdio h  struct cityTN     char name 20     int population    struct cityTN  left    struct cityTN  right     void printCitiesTree  int indent  struct cityTN  s   void turnoverCities struct cityTN  s   int main      struct cityTN c1     Hiratsuka   257829  NULL  NULL       c2     Odawara   190391  NULL  NULL       c3     Yokosuka   395706  NULL  NULL       c4     Kamakura   172311  NULL  NULL       c5     Chgasaki   241991  NULL  NULL       c6     Fujisawa   434110  NULL  NULL     struct cityTN  root   NULL    root    c1  c1 left    c2   c1 right    c3  c2 left    c4  c2 right    c5  c3 right    c6    printCitiesTree   root     turnoverCities root     printCitiesTree   root     return    void printCitiesTree  int indent  struct cityTN  ct     int i    if  ct    NULL    else       printCitiesTree  indent    ct  left       printCitiesTree  indent    ct  right         void turnoverCities struct cityTN  s     struct cityTN  tmp          if s  NULL       tmp s  left      s  left s  right      s  right tmp    turnoverCities s  right      turnoverCities s  left         < > * * * * * & * == ++ < -> > -> + > -> + > * * != -> > -> > -> > -> > -> > 
 include  stdio h  struct cityLN          char name 20           int population          struct cityLN  next      void printCities struct cityLN  ct   struct cityLN   reverseCities struct cityLN  ct   struct cityLN   reverseCitiesRecursive struct cityLN  ct struct cityLN  bt    int main            struct cityLN c1   Hiratuka  257829 NULL           c2   Odawara  190391 NULL           c3   Yokosuka  395706 NULL           c4   Kamakura  172311 NULL           c5   Chigasaki  241991 NULL           c6   Fujisawa  434110 NULL           struct cityLN  head NULL          head  c1  c1 next  c2  c2 next  c3  c3 next  c4  c4 next  c5  c5 next  c6          printCities head            head reverseCitiesRecursive head NULL           printCities head           return     void printCities struct cityLN  ct           if ct  NULL                   printCities ct  next                     else                 putchar  \n        struct cityLN   reverseCities struct cityLN  ct           struct cityLN  bt  dt          if ct  NULL  return NULL          if ct  next  NULL  return ct          bt ct          ct ct  next          bt  next NULL          while                   dt ct  next                  ct  next bt                  if dt  NULL  return ct                  bt ct                  ct dt               struct cityLN   reverseCitiesRecursive struct cityLN  ct struct cityLN  bt      struct cityLN  tmp NULL     if ct  NULL             return bt      tmp ct  next       ct  next bt       return reverseCitiesRecursive tmp ct     < > * * * * * & * != -> > -> > * * == == -> > -> > -> > -> > -> > == * * == -> > -> > 
 include  stdio h   include  stdlib h   include  string h   define LEN 50  struct ListNode    int order    char word LEN     struct ListNode  next     typedef struct ListNode LNode   LNode  cons int  char     void print_sentence LNode     void add_node LNode    LNode      int main      LNode  ltop    LNode  ladd    char word LEN     int order     ltop   cons   \0         while scanf   s  d   word   order           ladd   cons order  word       add_node ltop  ladd          print_sentence ltop  next      return      LNode  cons int order  char  word     LNode  nd    nd    LNode   malloc sizeof struct ListNode      if  nd    NULL       exit          nd  order   order    strcpy nd  word  word     nd  next   NULL    return nd      void print_sentence LNode  lnode     lnode   lnode  next    while lnode    NULL       lnode   lnode  next         void add_node LNode  lnode  LNode  ladd               if  lnode  next    NULL                   lnode  next   ladd                         else if  lnode  next  order   ladd  order                   ladd  next   lnode  next                  lnode  next   ladd                         else                   add_node lnode  next  ladd      < > < > < > * * * * * * == % & -> > * * * == - -> > -> > -> > * -> > -> > != -> > -> > * == -> > -> > -> > -> > -> > -> > 
 include  stdio h   include  stdlib h    define MAX 100  struct listNode     int n    struct listNode  next      struct listNode  addNode struct listNode  node  int num     int sumListNum struct listNode  node     int countListOdd struct listNode  node     int main void      int data MAX     struct listNode  head    int i    int sum  odd     head   NULL     while         scanf   d    data i        if  data i            break      else       head   addNode head  data i              return      struct listNode  addNode struct listNode  node  int num      struct listNode  newnode   head     head   node    newnode    struct listNode   malloc sizeof struct listNode      newnode  n   num     if  node    NULL        newnode  next   NULL      head   newnode        else       newnode  next   head      head   newnode        return head      int sumListNum struct listNode  node      if node  NULL      return   else    return sumListNum node  next   node  n        int countListOdd struct listNode  node       if node  NULL      return    else      if  node  n          node  n      else if  node  n          node  n    return countListOdd node  next   node  n        < > < > * * * * * % & == ++ * * * -> > == -> > -> > * == -> + > * == == -> % > -> > == -> % > -> > -> + > 
 include  stdio h   include  stdlib h   typedef struct _nd          int num          struct _nd  left          struct  _nd  right    NODE   void mbtree NODE  p1  int num    int main void      int data              10           int i          NODE  root   top          int dsize           dsize   sizeof data  sizeof int            for  i    i   dsize  i                        root    NODE    malloc sizeof NODE            if root    NULL                    exit                      root  num   data           root  left   NULL          root  right   NULL          top   root          for i    i   dsize  i                      mbtree top  data i                      return      void mbtree NODE  p1  int num            NODE  p2          p2    NODE   malloc sizeof NODE            if p2    NULL                    exit                      p2  num   num          p2  left   NULL          p2  right   NULL            if  p1  num   num                     if  p1  right    NULL                            p1  right  p2                                     else                   mbtree p1  right p2  num             else              if p1  left  NULL               p1  left p2                        else             mbtree p1  left p2  num               < > < > * * * * / ++ < * == - -> > -> > -> > -> > ++ < * * * == - -> > -> > -> > -> < > == -> > -> > -> > -> > == -> > -> > -> > -> > 
 include  stdio h   include  stdlib h   include  string h   typedef struct _nd           char data 20           struct _nd  left          struct _nd  right    NODE   void mbtree NODE  pp  char  data   int  btsearch  NODE  p  char  data    int main void            char data  20      this    book    good    flower    class    base            int i          for  i    i    i                        NODE  root   top          root    NODE    malloc sizeof NODE            if  root    NULL                    exit                      strcpy root  data  data            root  left   NULL          root  right   NULL          top   root          for   i    i    i                      mbtree top  data i                      btsearch top   class            btsearch top   boot            btsearch top   book            btsearch top   bad            return     void mbtree NODE  p1  char  data            NODE  p2           p2    NODE    malloc sizeof NODE            strcpy p2  data  data           p2  left   NULL          p2  right   NULL          if  p2    NULL                    perror  can not allocate memory for a new node\n                    exit                       if  strcmp p2  data p1  data                      if  p1  right    NULL                      p1  right p2                     else                           mbtree p1  right  data                             else             if p1  left  NULL               p1  left p2             else              mbtree p1  left data                              int btsearch NODE  p  char  data            int chk          int chknum             while  p    NULL                    chk   strcmp data  p  data                   chknum                    if  chk                        return                      else if  chk                          p p  left                    else                       p p  right                                      return      < > < > < > * * * * ++ < * * == - -> > -> > -> > -> > ++ < * * * -> > -> > -> > == - -> > == -> > -> > -> > -> > == -> > -> > -> > -> > * != -> > ++ == - < -> > -> > - 
 include  stdio h   include  stdlib h  struct node   int type  val  struct node  left   right     typedef struct node  EXP  EXP new_node int t int v EXP l EXP r      EXP x      x  EXP  malloc sizeof EXP       x  type t     x  val v     x  left l     x  right r     return x    EXP v_node int v      return new_node  v  v NULL NULL     EXP o_node int o  EXP l  EXP r      return new_node  o  o l r     int calc EXP e     if e  type   v       return e  val     else if e  type   o         if e  val             return calc e  left  calc e  right       if e  val             return  calc e  left  calc e  right             int main void      EXP n1 n2 n3 n4 n5 n6 n7        n1   v_node      n2   v_node      n3   v_node      n4   v_node      n5   o_node     n1 n3      n6   o_node     n2 n4      n7   o_node     n5 n6       return   < > < > * * == - -> > -> > -> > -> > == -> > -> > == -> > == -> + > -> + > == -> * > -> * > + * + 
 include  stdio h   include  stdlib h  struct node       int val      struct node  next     typedef struct node  LIST   int lenL LIST x        if  x    NULL          return      return   lenL x  next      LIST cutL LIST x  int p       LIST t    t    LIST  malloc sizeof struct node       if x  NULL      return NULL     else if p        t x  next      x  next NULL      return t         else      t x  next      cutL t p           void showL char  m  LIST x        while  x    NULL            x   x  next           LIST mergeL LIST x  LIST y      LIST hozon1      hozon1    LIST  malloc sizeof struct node     LIST hozon2      hozon2    LIST  malloc sizeof struct node       if x  NULL      return y     else if y  NULL      return x     else      hozon1 x  next      hozon2 y  next    x  next y    y  next hozon1    mergeL hozon1 hozon2     return x         LIST addL LIST x  int v        LIST t      t    LIST  malloc sizeof struct node        if  t    NULL            exit              t  val   v      t  next   x      return t     int main void        int i  len      LIST part1   NULL  part2  mix      scanf   d    len       for  i   len  i     i            part1   addL part1  i       part2   cutL part1  lenL part1          showL  part1   part1       showL  part2   part2       mix   mergeL part2  part1       showL  mix     mix       return   < > < > * * == -> + > == == -> > -> > -> > - * != -> > -> > == == -> > -> > -> > -> > == - -> > -> > % & >= -- / 
 include stdio h   include stdlib h     define N  typedef struct lnode  list   struct lnode    int val    list next      list input void   list insert int n  list l   list mknode int n  list l   int take int n  list l   void lfree list l    int main void     list l     l   input       lfree l      return     list input void     int n    list l     while        scanf   d    n       if  n            return NULL            else        l   input          return insert n  l                list insert int n  list l     list l1    if  l    NULL    l  val   n       return mknode n  l         if  l  val   n       l  next   insert n  l  next         return l     list mknode int n  list l     list l1     if   l1   malloc sizeof struct lnode       NULL       exit          l1  val   n    l1  next   l    return l1      int take int n  list l     n      if l  NULL      return    else if n       return l  val    else     take n l  next      void lfree list l     list l2    if l    NULL       l2 l  next      free l       l l2      lfree l        < > < > * % & <= == || -> < > -> > -> > -> > -> > == -> > -> > -> > -- == == -> > -> > != -> > 
 include  stdio h  struct cityTN     char name 20     int population    struct cityTN  left    struct cityTN  right     void printCitiesTree int indent  struct cityTN  s   struct cityTN  addCity struct cityTN  ct  char  str  int num   int main      struct cityTN c1     Hiratsuka   257829  NULL  NULL       c2     Odawara   190391  NULL  NULL       c3     Yokosuka   395706  NULL  NULL       c4     Kamakura   172311  NULL  NULL       c5     Chgasaki   241991  NULL  NULL       c6     Fujisawa   434110  NULL  NULL     struct cityTN  root   NULL    root    c1  c1 left    c2   c1 right    c3  c2 left    c4  c2 right    c5  c3 right    c6    char str 20     int num    scanf   s  d   str   num     root   addCity root  str  num     printCitiesTree  root     scanf   s  d   str   num     root   addCity root  str  num     printCitiesTree  root     return    void printCitiesTree int indent  struct cityTN  ct     int i    else       printCitiesTree indent    ct  left       printCitiesTree indent    ct  right         struct cityTN  addCity struct cityTN  ct  char  str  int num           struct cityTN  bt NULL          bt  struct cityTN   malloc sizeof struct cityTN            strcpy bt  name str           bt  population num          bt  left NULL          bt  right NULL          if ct  population num                   if ct  right  NULL                          ct  right bt                  addCity ct  right str num                     else if ct  population num                   if ct  left  NULL                          ct  left bt                  addCity ct  left str num                     return ct   < > * * * * * & % & % & * == ++ < -> > -> + > -> + > * * * -> > -> > -> > -> > -> < > == -> > -> > -> > -> > == -> > -> > -> > 
 include  stdio h   include  stdlib h  void printarray int heap    int size   void swapvalue int heap    int i  int j   void upvalue int heap    int i   void downvalue int heap    int i  int size   int main void     int data       98  87  36  35  54  11  33   79   size   10    int  heap  i    heap    int    malloc sizeof int  size     for i    i   size  i         heap i    data i       upvalue heap  i         printarray heap  size           heap    heap   size           downvalue heap   size           printarray heap  size     return    void printarray int heap    int size     int i    for  i    i   size  i      void swapvalue int heap    int i  int j     int tmp   heap i     heap i    heap j     heap j    tmp    void upvalue int heap    int i           int j i          if i                   while                           if  i                                   break                          if heap i   heap  i                                    swapvalue heap i  i                            i                              i j          if i                   while                           if  i                                   break                          if heap i   heap  i                            swapvalue heap i  i                            i                        void downvalue int heap    int i  int size           for  i size i                    upvalue heap i    < > < > * * ++ < -- ++ < == - ? == % - / < <= - / - / -- == % - / < <= - / - / -- ++ < 
 include  stdio h   include  stdlib h   include  string h    define WNUM 50  define WLEN 50  struct TreeNode     char word WLEN     struct TreeNode  left   right     typedef struct TreeNode TNode   TNode  tree char    TNode    TNode     void showtree int  TNode    char     TNode  makebst char    TNode     TNode  bstinsert TNode    TNode     void bstunion TNode    TNode      int main void      int i    ifdef EXE1    char words_a WNUM  WLEN      This    is    a    pen     \0      char words_b WNUM  WLEN      That    is    an    apple     \0     elif EXE2    char words_a WNUM  WLEN      learn    essential    skills    to    become    a    leading    engineer    or    creative    researcher     to    help    support    highly    sophisticated    information    in    society    \0      char words_b WNUM  WLEN      research   on   more   efficient   Filtering   for   safer   and   more   secure   computers   and   cellular   phones    \0     else    char words_a WNUM  WLEN      Canada    America    Brazil    Mexico     \0      char words_b WNUM  WLEN      India    Japan    China    \0     endif    TNode  tree_a   tree_b     tree_a   tree words_a   NULL  NULL     for i  words_a i       \0   i        makebst words_a i   tree_a     showtree  tree_a   \0        tree_b   tree words_b   NULL  NULL     for i  words_b i       \0   i        makebst words_b i   tree_b     showtree  tree_b   \0        bstunion tree_a  tree_b     showtree  tree_a   \0        return      TNode  tree char  d  TNode  l  TNode  r      TNode  result    result    TNode    malloc sizeof struct TreeNode      result  left   l    strcpy result  word  d     result  right   r    return result      void showtree int indent  TNode  t  char  head      int i     if  t  right    NULL      showtree indent  t  right             for i i indent i       if  t  left    NULL      showtree indent  t  left   \\           TNode  makebst char  str  TNode  t      int tmp    if  t    NULL      t   tree str  NULL  NULL     else if   tmp strcmp str  t  word          t  left   makebst str  t  left     else if  tmp        t  right   makebst str  t  right     return t     TNode  bstinsert TNode  t  TNode  target            if strcmp t  word target  word                    if t  right  NULL                           t  right target                          return t                             bstinsert t  right target                     else if strcmp t  word target  word                    if t  left  NULL                           t  left target                          return t                                    bstinsert t  left target                 void bstunion TNode  t_a  TNode  t_b   if t_b  left  NULL          bstunion t_a t_b  left   if t_b  right  NULL          bstunion t_a t_b  right   t_b  right NULL  t_b  left NULL  bstinsert t_a t_b     < > < > < > * * * * * * * != ++ != ++ * * * -> > -> > -> > * != -> > -> + / > ++ < -> > != -> > -> + > * == -> < > -> > > -> > * -> < > == -> > -> > -> > -> > == -> > -> > -> > * != -> > -> > != -> > -> > -> > -> > 
 include  stdio h    void moveone int size char dep char tmp   void towerH int num char dep char arv char tmp     int main void           int n          scanf   d   n           towerH n  A   C   B            return      int step  void moveone int size char dep char arv       void towerH int num char dep char arv char tmp           if num                    moveone dep arv                      else                  towerH num dep tmp arv                    moveone num dep arv                    towerH num tmp arv dep              < > % & ++ == - - 
 include  stdio h  int kaijou int n           int r          if n                   r          else                  r n kaijou n                     return r    int main void           int x k          scanf   d   x           k kaijou x            return   < > == * - % & 
 include  stdio h  int fn_roop int a int b int c int n   int fn_recursion int a int b int c int n   int main void            int a b c n          scanf   d   a           scanf   d   b           scanf   d   c           scanf   d   n            int i          for i i  n i                        for i i  n i                       return     int fn_roop int a int b int c int n           int f c          if n             return c       else            for int i i  n i                      f a  b f               return f           int fn_recursion int a int b int c int n           int f2 c          if n                   return c           else          f2 a  b f2           fn_recursion a b f2 n              < > % & % & % & % & <= ++ <= ++ == <= ++ * + == * + - 
 include  stdio h   include  stdlib h  int calculate int query  int data    int size   int main void    int data    98 87 36 35 54 11 33 79  size 10   int query  min   while     scanf   d   query     if query break    min calculate query data size         return     int calculate int query  int data    int size     int i  mainasu  minimum   minimum   abs query data     for i  i size  i       mainasu   abs query data i      if mainasu   minimum     minimum   mainasu        return minimum   < > < > % & < - ++ < - < 
 include  stdio h   define MAX 100  int main void           int stack MAX  stackPtr          int num data           while                    scanf   d   num                   if num                            return                                    else if num                            scanf   d   stack stackPtr                            stackPtr                                      else if num                            if stackPtr                           else                          stackPtr                                                                else if num                            if stackPtr                                                              for int i stackPtr i  i                                                            < > % & == == % & ++ == <= - -- == == >= -- - 
 include  stdio h  int main void            int i j tmp           int data 12            int total          scanf   d   total           if 12 total                   total 12                     for i i total   i                  scanf   d   data i             for i i total   i                   for j i j total   j                            if data j  data i                                    tmp data i                                   data i  data j                                   data j  tmp                                                                 for i i total   i          return   < > % & < ++ < % & ++ < ++ + < < ++ < 
 include  stdio h  void printarray int data    int size   void sortarray int data    int size   int binarysearcharray int query  int data   int size   int main void           int data    98 87 36 35 54 11 33 79  size 10          int query          printarray data size           sortarray data size           printarray data size           while                   scanf   d   query                   if query break                  if binarysearcharray query data size                      return    void printarray int data   int size           int i          for i i size i      void sortarray int data   int size           int i j tmp          for i i size i                     for j i j size j                             if data i  data j                                    tmp data i                                   data i  data j                                   data j  tmp                                                          int binarysearcharray int query  int data   int size           int u v size m          while u v                   m  u v                   if data m   query                          return                  else if data m  query                          u m                  else if data m  query                          v m             < > % & < == ++ < == - ? ++ - < ++ + < > - < + / == < + > - 
 include  stdio h   define N  int main void    int num_list 1000    int count     for int i    i       scanf   d   num_list i      count      if num_list i         break        if count   N     int tmp   for int i  i count  i       for int j i  j count  j        if num_list i    num_list j        tmp           num_list i       num_list i    num_list j       num_list j    tmp                 for int i  i count  i       int target   num_list    int pos        for int i  i count  i       if num_list i     num_list i       target   num_list i      pos          if pos    N     break        return    < > ++ % & ++ <= < ++ - < ++ + < < ++ < ++ < != + ++ == 
 include  stdio h  int copyN char  out int pos char  in int num    define L 27 int main void            char inbuf 20           char outbuf L           int i p p2 n          for i i L i   outbuf i   A  i          outbuf L   \0            p2 copyN outbuf p inbuf n            for i i L i                              if outbuf i                    else                   return     int copyN char  out int pos char  in int num            int i n          n pos          for i i num i                     out n  in i                   n                      out n   \0           return pos num   < > * ++ < - & & ++ < == * ++ < ++ + 
 include  stdio h   int copyN char  out int pos char  in int num   int maxip char  s    int main void            char  strs    v4va   4j4k8ghx   4j4kl23   2006456            char outb 80             int p i n          for i i i                     n maxip strs i            p copyN outb p strs i  n             return     int copyN char  out int pos char  in int num            int i n          n pos          for i i num i                     out n  in i                   n                      out n   \0           return pos num     int maxip char  s            int j          int max_val  max_index  count           for j s j    \0  j                      if      s j     s j                                  if max_val   s j                                     max_val     s j                                   max_index   j                                                     count                                         if count                     max_index             return max_index   < > * * * ++ < * ++ < ++ + * != ++ <= && < ++ == 
 include  stdio h   define WLEN 20  define WNUM 10 int main            char words WNUM  WLEN      Yokohama   Hiratuka   Sagamihara   Atsugi   Fujisawa   Chigasaki   Odawara   Kawasaki   Yamato   Yokosuka            char tmp          int src dest          int i           for i i WNUM i             scanf   d  d   src  dest           if src    dest    src    WNUM src    dest    WNUM dest                   return                     for i  i                     if words src  i    \0     words dest  i    \0                           break                  tmp words src  i                   words src  i  words dest  i                   words dest  i  tmp                     for i i WNUM i             return   < > ++ < % & == || < ++ == && ++ < 
 include  stdio h  int square1 int a   void square2 int  a   int   square3 int  a    int main void     int k   while       if k   break           k square1 k            square2  k            square3 square3  k             return     int square1 int a       a a a      return a     void square2 int  a     a   a    a      int  square3 int  a        a   a    a       return a   < > * * & <= & & * * * * * 
 include  stdio h  void printStrings char   p int n   void swapStrings char   p int i int j   int main void           char  p 100           char Orange    orange  Apple    apple  Peach    peach           Grape    grape  Melon    melon           int i j          p  Orange  p  Apple  p  Peach  p  Grape  p  Melon          printStrings p           while                   scanf   d  d   i  j                   if i    i    j    j  break                  swapStrings p i j                   printStrings p                     return     void printStrings char   p int n           int i          for i i n i       void swapStrings char   p int i int j           int k          char  tmp          tmp p i           p i  p j           p j  tmp   < > * * * % & || < > * ++ < & * * 
 include  stdio h   void minmax int  data  int size  int  min  int  max    int main void            int data    16 14 15              int size 10           int min          int max            minmax data size  min  max            return     void minmax int  data  int size  int  min  int  max        int i     int min2     min2 data      for i i size i                if data i  min2                      min2 data i                       min i                           int j          int max2          max2 data           for j j size j                     if max2 data j                            max2 data j                            max j                               < > * - & * ++ < < * ++ < < * 
 include  stdio h   define MAX 15 int bin_coef int n  int p        if p n                  return          else if n                   return          else if p                   return bin_coef n p           else                 return bin_coef n p  bin_coef n p      int main void       int n p      for n n  MAX n                     for p p  n p                  return   < > > == == - + - <= ++ <= ++ 
 include stdio h   include  string h  int main void     int i j    for i i 100 i         j j        int x    50 70 80 45 38     float h  d  y    h   62    d   12    int u    while  d          for u u u           y   x u  h  d  10 50            d d        < > < > ++ < * > ++ < * + - / - 
 include  string h   define LEN 10  int main            char sentence      ATGCATGAATTGCCAATGGAGCCCCTCGAAGCGTCCGAGTAA           char query LEN           char result LEN           int length          int stop          int i  j     scanf   s   query      length   strlen query      stop      for i  stop     i               for j  j length  j                        if sentence i j      \0                            stop                            break                                              else                            if   query j              query j     sentence i j                                       break                            else                                   result j    sentence i j                                                           if  j    length                             result j     \0                                                             return   < > + + % == ++ ++ < == + != && + + == 
 include  stdio h  void calculate int  data  int size  int  min  int  max  double  avg   int main void           int data       98  87  36  35  54  11  33   79   size   10          int min  max          double avg          calculate data size  min  max  avg           return    void calculate int  data  int size  int  min  int  max  double  avg     int i    int min2    min2 data      min    for i i size i         if min2 data i          min2 data i          min min2               int j    int max2    max2 data      max    for j j size j         if max2 data j          max2 data j          max max2                int arv2    for i i size i         arv2 arv2 data i        avg arv2       < > * & / * * ++ < > * * ++ < < * ++ < + * 
 include  stdio h   include  stdlib h   int main void     char buf 1000     FILE  fp    int a     if  fp fopen buf  r     NULL       exit          while fscanf fp   d\t d\t d\t d\t d   a   a   a   a   a    EOF    fclose fp     return   < > < > * == != % & 
 include  stdio h  int main void     FILE  fp   FILE  fp2   char s 256    char c   if   fp   fopen  sampledata txt    r       NULL            return            if  fp2   fopen  secretdata txt    w       NULL     return                        while  fgets s  256  fp     NULL                                      fseek fp   SEEK_SET                         while fscanf  fp    s   s     EOF                                     fseek fp   SEEK_SET                 while  c   fgetc fp      EOF                   fputc c  fp2                     fclose fp           fclose fp2    < > * * == == != != % != + 
 include  stdio h   define MAXLINE 1001 int main int argc  char  argv             int i  j          int f      char line MAXLINE           FILE  file     if  argc                return                    if   file   fopen argv    r       NULL                     return                         while fgets line  MAXLINE  file     NULL             for  i    line i      \0   i                       f                      for  j    argv  j      \0   j                               if  line i   j     argv  j                                      f                                      break                                                                                      if  f                                               break                                                          if  f                 fclose file     return     < > * * != == != != ++ != ++ != + == == 
 include  stdio h   define NLEN 14  define Lsize  sizeof list  sizeof struct town   struct town   int area  pop  char name NLEN       double getDens struct town t     double x    x  double t pop  double t area    return x     void printTown struct town t       int main void   struct town list              33 22  honmachi     30 17  kishine     40 18  kosugi           12 11  kouen     27 35  fujisawa     50 11  kouza           17 90  musashi     36 13  oono     40 53  ootsuka           15 86  sagami     20 67  shibuya     34 15  uehara        18 60  yoyogi         int i j    double max    double maxtown    for i i Lsize i         max getDens list i        if maxtown max         maxtown max        j i                printTown list j       return   < > / + / / ++ < < 
 include  stdio h   include  string h   define NLEN 14 struct town       int area  pop      char name NLEN        struct town newTown struct town s struct town t       struct town rt       rt area s area t area      rt pop s pop t pop      strcat s name t name       strcpy rt name s name        int moji strlen rt name       if NLEN moji        strcpy rt name  too long        return rt    double getDens struct town t      double x    x  double t pop  double t area    return x    void printTown struct town t        define Lsize  sizeof list  sizeof struct town   int main void        struct town rt  int t1 t2 i      struct town list              33 22  Honmachi     30 17  Kishine     40 18  Kosugi           12 11  Kouen     27 35  Fujisawa     50 11  Kouza           17 90  Musashi     36 13  Oono     40 53  Ootsuka           15 86  Sagami     20 67  Shibuya     34 15  Uehara           18 60  Yoyogi     38 10  Dai              for  i    i   Lsize  i             printTown list i              while           scanf   d   t1   scanf   d   t2           if t1  t2  t1  Lsize  t2  Lsize  t1  t2              break          rt   newTown list t1  list t2            printTown rt             return   < > < > + + + < / / / ++ < % & >= == || < 
 include stdio h   include stdlib h   include math h   struct point     double x    double y      struct rectangle    struct point ll    struct point ur      struct rectangle inputr void   double area struct rectangle r   double lengthd struct rectangle r   int    issquare struct rectangle r    int main void     struct rectangle a       a   inputr            return     struct rectangle inputr void     struct rectangle r       scanf   \n  lf  lf     r ll x   r ll y     scanf   \n  lf  lf     r ur x   r ur y      if    r ll x    r ur x      r ll y    r ur y         exit            return r     double area struct rectangle r     return  r ur x   r ll x     r ur y   r ll y      double lengthd struct rectangle r     double vertical     r ur x   r ll x     r ur x   r ll x      double side         r ur y   r ll y     r ur y   r ll y      return sqrt vertical   side      int issquare struct rectangle r     return r ur x r ll x    r ur y r ll y    < > < > < > % & % & >= || * - * - * - + == - 
